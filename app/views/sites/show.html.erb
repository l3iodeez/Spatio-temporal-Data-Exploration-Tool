<p id="notice"><%= notice %></p>





<h1>Displaying Water level data</h1>

<table>
  <thead>
    <tr>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <div id="map_canvas" style="height: 300px; width:1200px;"></div>
  </tbody>
</table>


<br>


<script type="text/javascript">
handler = Gmaps.build('Google');
handler.buildMap({ provider: {}, internal: {id: 'map_canvas'}}, function(){
 markers = handler.addMarkers(<%=raw @hash.to_json %>);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();

});
</script>


<script>

// Set the dimensions of the canvas / graph
var margin = {top: 30, right: 20, bottom: 30, left: 50},
    width = 1200 - margin.left - margin.right,
    height = 600 - margin.top - margin.bottom;

// Parse the date / time
var parseDate = d3.time.format("%Y-%m-%d").parse;

// Set the ranges
var x = d3.time.scale().range([0, width]);
var y = d3.scale.linear().range([height, 0]);

// Define the axes
var xAxis = d3.svg.axis().scale(x)
    .orient("bottom").ticks(5);

var yAxis = d3.svg.axis().scale(y)
    .orient("left").ticks(5);

// Define the line
var valueline = d3.svg.line()
    .x(function(d) { return x(d.measure_date); })
    .y(function(d) { return y(d.water_level); });

// Adds the svg canvas
var svg = d3.select("body")
    .append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
    .append("g")
        .attr("transform",
              "translate(" + margin.left + "," + margin.top + ")");

// Get the data
d3.csv('/measurements/<%= params[:id]%>.csv', function(error, data) {
  debugger
    data.forEach(function(d) {
        d.measure_date = parseDate(d.measure_date);
        d.water_level = +d.water_level;
    });

    // Scale the range of the data
    x.domain(d3.extent(data, function(d) { return d.measure_date; }));
    //x.domain([parseDate("1900-01-01"),parseDate("2016-01-01"])
    y.domain([0, d3.max(data, function(d) { return d.water_level; })]);

    // Add the valueline path.
    svg.append("path")
        .attr("class", "line")
        .attr("d", valueline(data));

    // Add the X Axis
    svg.append("g")
        .attr("class", "x axis")
        .attr("transform", "translate(0," + height + ")")
        .call(xAxis);

    // Add the Y Axis
    svg.append("g")
        .attr("class", "y axis")
        .call(yAxis);

});

</script>

<%= link_to 'New Site', new_site_path %>
